(function () {
  'use strict';

  // ‚ÑπÔ∏è INFORMACI√ìN DEL SCRIPT
  const nombreScript = '[NuevoExtractüì¶]';
  const tipoScript = 'Resumen de Orden';

  // üö´ Evitar cache
  const timestamp = '?nocache=' + Date.now();

  // üîÅ Cargar scripts necesarios si a√∫n quieres usar otros m√≥dulos
  function cargarYEjecutarScript(url, callback) {
    console.log(`${nombreScript} üîÑ Cargando script desde: ${url}`);
    fetch(url)
      .then(response => {
        if (!response.ok) throw new Error(`Estado: ${response.status}`);
        return response.text();
      })
      .then(code => {
        try {
          new Function(code)();
          console.log(`${nombreScript} ‚úÖ Script ejecutado: ${url}`);
          if (typeof callback === 'function') callback();
        } catch (e) {
          console.error(`${nombreScript} ‚ùå Error al ejecutar script (${url}):`, e);
        }
      })
      .catch(error => {
        console.error(`${nombreScript} ‚ùå Error al cargar el script (${url}):`, error);
      });
  }

  // üïí Esperar que datos est√©n disponibles
  setTimeout(() => {
    const datos = window.datosExtraidosNuevo;
    if (!datos) {
      alert(nombreScript + '\n\n‚ùå Error: "datosExtraidosNuevo" no est√° definido.');
      return;
    }

    // üß∑ Extraer datos uno por uno (opcional: destructuraci√≥n)
    const {
      orden,
      cuenta,
      total,
      creado,
      fechaProgramada,
      nombre,
      telefono,
      direccion,
      negocio
    } = datos;

    // üìã Crear plantilla con los datos
    const resultado = `
üì¶ Orden de Servicio
=========================
üÜî Orden: ${orden}
üë§ Cuenta: ${cuenta}
üí∞ Total: ${total}
üìÖ Creado: ${creado}
üóìÔ∏è Fecha programada: ${fechaProgramada}
üë®‚Äçüíº Nombre: ${nombre}
üìû Tel√©fono: ${telefono}
üìç Direcci√≥n: ${direccion}
üè¢ Negocio: ${negocio}
`.trim();

    // üì§ Copiar al portapapeles
    navigator.clipboard.writeText(resultado).then(() => {
      console.log(nombreScript + ' ‚úÖ Copiado:', resultado);
      alert(
        nombreScript + '\n\nüìã Datos copiados al portapapeles con √©xito ‚úÖ\n\n' + resultado
      );

      // üßπ Limpiar variables si deseas
      delete window.datosExtraidosNuevo;
      delete window.bloqueHTMLCapturadoo;
    }).catch((err) => {
      console.error(nombreScript + ' ‚ùå Error al copiar al portapapeles:', err);
    });

  }, 600); // ‚è±Ô∏è Espera breve para asegurar que datos est√©n disponibles

})();
